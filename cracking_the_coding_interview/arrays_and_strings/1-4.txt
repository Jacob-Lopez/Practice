Given a string, determine if it is a permutation of a palindrome

1) All lower case ascii? Spaces?
2) Test Cases: taco cat -> accoat t, accoatb t
                a -> a
3) Brute Force? check if each character has a pair somewhere else in the string. One character is allowed to not have a pair
4) Can use an array or hashmap to store counts of characters
        check the array at the end. Only one character is allowed to have one occurence in the string
5) Walkthrough...
6) Implement
    public class Solution {
        public boolean permutationOfPalindrome(String input) {
            int[] counts = new int[128];
            int oddCount = 0;
            for (int i = 0; i < input.size(); i++) {
                char c = input.charAt(i);
                counts[c] += 1
                oddCount += (counts[c] % 2 == 1) ? 1 : -1;
            }
            return oddCount <= 1;
        }
    }